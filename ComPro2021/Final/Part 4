from tkinter import *                                                       #เรียก tkinter เพื่อนำมาใช้ในรูปแบบย่อว่า tk และใช้ * เพื่อบังคับใช้ทุกคำสั่ง
import pandas as pd                                                         #นำ Pandas มาใช้

class UI:                                                                   #ชื่อคลาส เป็นคลาสของหน้าแรก
    def __init__(self) -> None:                                             #กำหนดตัวแปลไว้ใช้
        self.user_name  = ''                                                #ตั้งตัวแปรถามชื่อลูก (ตรงนี้ไม่ได้ใช้ใส่ไว้เพื่อให้เข้าการใช้คำสั่งถามชื่อลูกค้า)
        self.dict_menu  = {}                                                #ตัวเก็บเมนูเจ้าของร้าน
        self.dict_order = {}                                                #ตัวเก็บออเดอร์ของลูกค้า
        self.user_order_menu = ''                                           #ตัวเก็บข้อมูลเมนูข้อลูกค้าที่ลูกค้าพิม
        self.user_order_quan = ''                                           #ตัวเก็บจำนวนแก้วที่ลูกค้าต้องการ
        self.df_menu = pd.read_excel('ファカマ_ Cafe.xlsx')                       #เรียกข้อมูลจาก Excel
        self.df = self.df_menu[['Menu', 'Baht']]                            #ตัวแปรเก็บข้อมูลสองคอลัมน์ที่เราสนใจ

    def menu(self):                                                         #ฟังชั่นสำหรับแสดงหน้าแรก
        for i in range(len(self.df)):                                       #กำหนดขอบเขตของข้อมูล (ขนาดตามจำนวนข้อมูลของ Excel ที่มีอยู่)
            self.dict_menu[self.df.at[i,'Menu']] =  self.df.at[i, 'Baht']   #ตัวเก็บข้อมูล Excel เข้าไปที่ Dict_Menu
        root = Tk()                                                         #ตัวเริ่มต้นหน้า UI ของเรา
        frame = Frame(root)                                                 #ทำให้เป็นกลุ่มเฟรมเฉพาะ
        message = self.df                                                   #ดึงข้อมูลจาก Excel เพื่อนำมาโชว์
        list_menu = Text(                                                   #list menu จาก Excel
                            frame,                                          #ตัวกำหนดเฟรม
                            height=15,                                      #ขนาดความสูง
                            width=50,                                       #ขนาดความกว้าง
                        )

        list_menu.insert('end', message)                                    #นำข้อมูลเข้าไปที่ เฟรมที่เรากำหนดไว้จากคำสั่ง Frame
        list_menu.config(state=DISABLED)                                    #ปิดการแก้ไขเพื่อไม่ให้ User แก้ไข เมนูของเรา
        list_menu.pack(side=LEFT,expand=True)                               #บังคับข้อมูลให้ไปอยู่ทางซ้ายสุด
        sb = Scrollbar(frame)                                               #สร้างตัวเลื่อนขึ้นลงของตัวแสดงเมนู Excel
        sb.pack(side=RIGHT, fill=BOTH)                                      #บังคับตัวเลื่อนขึ้นลงให้ชิดขวาสุด
        list_menu.config(yscrollcommand=sb.set)                             #เซ็ตโปรแกรมให้เลื่อนขึ้นลงให้อยู่เฉพาะแกน Y
        frame.pack(expand=True)                                             #เปิดคำสั่งให้ข้อมูลอยู่เป็นกลุ่ม Frame

        label2 = Label(text = "Enter your order:")                          #บอกให้ลูกค้าใส่ชื่อเมนู
        label2.pack()                                                       #บอกกำหนดต่อข้อมูลจากคำสั่งข้างบน

        self.user_order_menu = Entry(text = " ")                            #ส่วนที่ให้ลูกค้ากรอกสิ่งที่จะสั่งจากทางร้าน
        self.user_order_menu.pack()                                         #ส่วนกำหนดข้อมูลจากคำสั่งด้านบน
        self.user_order_menu["justify"] = "center"                          #ตัวเคอร์เซอร์กระพิบที่ลูกค้าสั่งให้มันอยูตรงกลาง
        self.user_order_menu.focus()                                        #ตัวคำสั่งที่ต้องมาเพื่อ.....? (ไม่มีก็ได้นะ)

        label3 = Label(text = "Enter your quantity:")                       #บอกให้ลูกค้าใส่จำนวนแก้วที่ต้องการจะสั่ง
        label3.pack()                                                       #บอกกำหนดต่อข้อมูลจากคำสั่งข้างบน

        self.user_order_quan = Entry(text = " ")                            #ส่วนที่ให้ลูกค้ากรอกจำนวน
        self.user_order_quan.pack()                                         #ส่วนกำหนดข้อมูลจากคำสั่งด้านบน
        self.user_order_quan["justify"] = "center"                          #ตัวเคอร์เซอร์กระพิบที่ลูกค้าสั่งให้มันอยูตรงกลาง
        self.user_order_quan.focus()                                        #ตัวคำสั่งที่ต้องมาเพื่อ.....? (ไม่มีก็ได้นะ)

        button1 = Button(text = "Add to Cart", command= self.order)         #ปุ่มกด (คำสั่งไปที่ฟังชั่นออนเดอร์)
        button1.pack(pady= 5)                                               #บอกกำหนดต่อข้อมูลจากคำสั่งข้างบน

        button1 = Button(text = "Submit", command= lambda: self.changeScreen(root))     #ปุ่มกด (สำหรับเปลี่ยนหน้าเมนู เป็นหน้าบิล)
        button1.pack(pady= 5)                                               #บอกกำหนดต่อข้อมูลจากคำสั่งข้างบน
        root.mainloop()                                                     #บังคับไม่ให้โปรแกรมปิดตัวมันเองนอกจากเราจำสั่งปิดมัน

    def order(self):                                                        #ส่วนที่จะทำการแอดสื่งที่ลูกสั่งเขาไปใน Dict_Order
        if self.user_order_menu.get() in self.dict_menu:                    #เช็คที่ลูกค้าสั่งมาว่ามีอยู่ในเมนูไหมจาก Excel ถ้ามีก็จะเพิ่มเข้าไปใน Dict_Order
            self.dict_order[self.user_order_menu.get()] = self.user_order_quan.get() #เพิ่มสิ่งที่ลูกค้าสั่งเข้าไปใน Dict_Order
            print(self.dict_order)                                          #เช็คข้อมูลเฉยๆ เพื่อความถูกต้อง(ไม่จำเป็นต้องใส่)
        self.user_order_menu.delete(0, END)                                 #เคลียช่องสื่งที่ลูกค้าเพื่อให้สามารถสั่งต่อได้เลย
        self.user_order_quan.delete(0, END)                                 #เคลียช่องจำนวนแก้วที่ลูกค้าสั่งเพื่อสามารถสั่งต่อได้เลย

    def changeScreen(self, root):                                                               #ฟังชั่นเปลี่ยนหน้าเมนู
        if bool(self.user_order_menu) == True:                                                  #การเช็คข้อมูลว่ามีข้างในอยู่จริงไหม
            root.destroy()                                                                      #การปิดหน้าเดิมทิ้ง
            final_page = FinalScreen(final_order= self.dict_order, final_menu= self.dict_menu)  #การที่เรียก ClassFinalscreen โดยที่กำหนดว่านำข้อมูลจากหน้าเดิมมาใช้แค่บางส่วน
            final_page.final_screen()                                                           #การที่เราเข้าถึงฟังชั่นใดฟังชั่นนึงในหน้าที่สอง

class FinalScreen:                                                          #กำหนด Class บิล
    def __init__(self, final_order, final_menu) -> None:                    #เป็นการประกาศ Attribute โดยที่เราได้ดึงข้อมูลจากหน้าเก่ามาด้วยคือ Finalorder
        self.user_order = list(final_order.items())                         #แปลงข้อมูลจาก Dict เป็น List รายการที่ลูกค้าสั่ง
        self.dict_menu = final_menu                                         #เป็นตัวแปรที่เก็บ Dict_Menu ไว้
        self.sum_price = 0                                                  #ตัวแปรที่ไว้รวมราคา

    def bill_page(self, root):                                              #ส่วนที่ไว้แสดงหน้าจอของบิล
        final_file = open('bill.txt', 'r')                                  #เปิดไฟล์ (บอกว่าเป็นโหมดการอ่านบิล)
        r = final_file.read()                                               #ตัวแปรไว้อ่านไฟล์
        bill = Message(root, text= r , fg='#623B28', font='none 12 bold')   #ทำเป็นช่อง Massage มาแสดงเป็นบิล
        bill.pack(anchor='center')                                          #คำสั่งให้ตัวแสดงผลของบิลอยู่ตรงกลาง

    def calculate_bill(self):                                               #กำหนดการคำนวณราคาแล้วเพิ่มลงบิล
        for i in range(len(self.user_order)):                               #คำนวณราคารวมสิ่งที่ลูกค้าสั่ง
            self.sum_price = self.sum_price + (self.dict_menu[self.user_order[i][0]] * int(self.user_order[i][1])) #รัน Loop ค่าไปเรื่อยๆจนกว่าข้อมูลจะหมด
        print(self.sum_price)                                               #เช็คราคารวมมันขึ้นจริงไหม (ไม่ต้องมีก็ได้)

        print_bill = open('bill.txt', 'w')                                  #เปิดtxt ไฟล์ที่เขียนในรุปแบบบิล
        head = '{}ファカマ_ Cafe{}\n'.format('#'*6, '#'*6)                   #เป็นตัวแปรที่เก็บไว้ ว่าจะเขียนอะไรบ้างลงในไฟล์
        tell = '  Have A Good Day Jhos \n'                                  #เป็นตัวแปรที่เก็บไว้ ว่าจะเขียนอะไรบ้างลงในไฟล์
        
        print_bill.write(head)                                              #การเขียนเข้า txt ไฟล์โดยที่เราเลือกตัวแปร 
        print_bill.write(tell)                                              #การเขียนเข้า txt ไฟล์โดยที่เราเลือกตัวแปร 

        for i in range(len(self.user_order)):                               #Loop ที่รันทุกสิ่งที่ลูกค้า Order มา
            product = '{} x{}'.format(self.user_order[i][0], self.user_order[i][1])                     #ตัวแปรเก็บว่ามีอะไรที่ลูกค้าสั่ง (ชื่อเมนูที่ลูกค้าสั่ง // จำนวนแก้ว)
            price = ' {}'.format(self.dict_menu[self.user_order[i][0]] * int(self.user_order[i][1]))    #ตัวแปรเก็บว่ามีอะไรที่ลูกค้าสั่ง (ราคาของแต่ละเมนู)
            print_bill.write(product)                                                                   #การเขียนเข้า txt ไฟล์โดยที่เราเลือกตัวแปร (product)
            print_bill.write(price + 'B \n')                                                            #การเขียนเข้า txt ไฟล์โดยที่เราเลือกตัวแปร (price)
            
        cost = 'Total Cost is {}'.format(self.sum_price)                    #สร้างตัวแปรเก็บราคารวมไว้
        print_bill.write(cost + '\n')                                       #การเขียนเข้า txt ไฟล์โดยที่เราเลือกตัวแปร (cost)
        end = '#'*20                                                        #ขั้นหน้ากระดาษ (ไม่ต้องใส่ก็ได้)
        print_bill.write(end)                                               #การเขียนเข้า txt ไฟล์โดยที่เราเลือกตัวแปร (end)
        print_bill.close()                                                  #การปิด txt ไฟล์

    def final_screen(self):                                                 #ตัวฟังชั่นหลักของหน้าที่สอง
        self.calculate_bill()                                               #เรียกใช้ฟังชั่นนี้เพื่อคำนวณราคาและสร้าง txt ไฟล์
        root = Tk()                                                         #ตัวแสดงผล GUI
        root.title('bill')                                                  #หัวข้องข้างบน (bill // บิล)
        self.bill_page(root)                                                #ไปเรียกใช้ฟังชั่น bill page เพื่อแสดงหน้าจอบิลของร้านเรา
        root.mainloop()                                                     #บังคับตัว Tk ให้รันอยู่ตลอดเวลาจนกว่าเราจะปิดเอง

test_gui = UI()                                                             #สร้าง OBJ เก็บ class UI ไว้
test_gui.menu()                                                             #เรียกใช้ Ui แสดงผลหน้าแรกเพื่อเป็นเมนูหลักสำหรับสั่ง
